{"ast":null,"code":"var _jsxFileName = \"/home/stephen/week-2-code-challenge/src/components/BotsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BotsPage() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [allBots, setAllBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [currentBot, setCurrentBot] = useState(null);\n  useEffect(() => {\n    const getAllBotsHandler = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch('http://localhost:8002/bots');\n        const responseData = await response.json();\n        setAllBots(responseData);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getAllBotsHandler();\n  }, []);\n\n  const deleteBot = async botId => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`http://localhost:8002/bots/${botId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'accept': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Error occured');\n      }\n\n      const responseData = await response.json();\n      console.log(responseData);\n      setCurrentBot(null);\n      const inEnlisted = enlistedBots.find(bot => bot.id === botId);\n\n      if (inEnlisted) {\n        setEnlistedBots(prevBots => prevBots.filter(bot => bot.id !== botId));\n      }\n\n      setAllBots(prevBots => prevBots.filter(bot => bot.id !== botId));\n    } catch (err) {} finally {\n      setIsLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      deleteBot: deleteBot,\n      enlistedBots: enlistedBots\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      deleteBot: deleteBot,\n      currentBot: currentBot,\n      setCurrentBot: setCurrentBot,\n      isLoading: isLoading,\n      allBots: allBots,\n      enlistedBots: enlistedBots,\n      setEnlistedBots: setEnlistedBots\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotsPage, \"lKMxQ/LqUWP6kL8Sbo/M36IPbQg=\");\n\n_c = BotsPage;\nexport default BotsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useEffect","useState","YourBotArmy","BotCollection","BotsPage","isLoading","setIsLoading","allBots","setAllBots","enlistedBots","setEnlistedBots","currentBot","setCurrentBot","getAllBotsHandler","response","fetch","responseData","json","err","console","log","deleteBot","botId","method","headers","ok","Error","inEnlisted","find","bot","id","prevBots","filter"],"sources":["/home/stephen/week-2-code-challenge/src/components/BotsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [allBots, setAllBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [currentBot, setCurrentBot] = useState(null);\n\n  useEffect(() => {\n    const getAllBotsHandler = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch('http://localhost:8002/bots');\n        const responseData = await response.json();\n        setAllBots(responseData);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getAllBotsHandler();\n  }, [])\n\n  const deleteBot = async (botId) => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`http://localhost:8002/bots/${botId}`, { method: 'DELETE', headers: { 'Content-Type': 'application/json', 'accept': 'application/json' } });\n      if(!response.ok){\n        throw new Error('Error occured');\n      }\n      const responseData = await response.json();\n      console.log(responseData);\n      setCurrentBot(null);\n      const inEnlisted = enlistedBots.find((bot) => bot.id === botId);\n      if(inEnlisted){\n        setEnlistedBots(prevBots => prevBots.filter((bot) => bot.id !== botId));\n      }\n      setAllBots(prevBots => prevBots.filter((bot) => bot.id !== botId));\n    } catch (err) {} finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div>\n      <YourBotArmy deleteBot={deleteBot} enlistedBots={enlistedBots} />\n      <BotCollection deleteBot={deleteBot} currentBot={currentBot} setCurrentBot={setCurrentBot} isLoading={isLoading} allBots={allBots} enlistedBots={enlistedBots} setEnlistedBots={setEnlistedBots} />\n    </div>\n  )\n}\n\nexport default BotsPage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMa,iBAAiB,GAAG,YAAY;MACpC,IAAI;QACFP,YAAY,CAAC,IAAD,CAAZ;QACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAAD,CAA5B;QACA,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;QACAT,UAAU,CAACQ,YAAD,CAAV;MACD,CALD,CAKE,OAAOE,GAAP,EAAY;QACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACD,CAPD,SAOU;QACRZ,YAAY,CAAC,KAAD,CAAZ;MACD;IACF,CAXD;;IAYAO,iBAAiB;EAClB,CAdQ,EAcN,EAdM,CAAT;;EAgBA,MAAMQ,SAAS,GAAG,MAAOC,KAAP,IAAiB;IACjC,IAAI;MACFhB,YAAY,CAAC,IAAD,CAAZ;MACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAA6BO,KAAM,EAArC,EAAwC;QAAEC,MAAM,EAAE,QAAV;QAAoBC,OAAO,EAAE;UAAE,gBAAgB,kBAAlB;UAAsC,UAAU;QAAhD;MAA7B,CAAxC,CAA5B;;MACA,IAAG,CAACV,QAAQ,CAACW,EAAb,EAAgB;QACd,MAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;MACD;;MACD,MAAMV,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;MACAE,OAAO,CAACC,GAAR,CAAYJ,YAAZ;MACAJ,aAAa,CAAC,IAAD,CAAb;MACA,MAAMe,UAAU,GAAGlB,YAAY,CAACmB,IAAb,CAAmBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWR,KAAtC,CAAnB;;MACA,IAAGK,UAAH,EAAc;QACZjB,eAAe,CAACqB,QAAQ,IAAIA,QAAQ,CAACC,MAAT,CAAiBH,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWR,KAApC,CAAb,CAAf;MACD;;MACDd,UAAU,CAACuB,QAAQ,IAAIA,QAAQ,CAACC,MAAT,CAAiBH,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWR,KAApC,CAAb,CAAV;IACD,CAdD,CAcE,OAAOJ,GAAP,EAAY,CAAE,CAdhB,SAcyB;MACvBZ,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CAlBD;;EAoBA,oBACE;IAAA,wBACE,QAAC,WAAD;MAAa,SAAS,EAAEe,SAAxB;MAAmC,YAAY,EAAEZ;IAAjD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,aAAD;MAAe,SAAS,EAAEY,SAA1B;MAAqC,UAAU,EAAEV,UAAjD;MAA6D,aAAa,EAAEC,aAA5E;MAA2F,SAAS,EAAEP,SAAtG;MAAiH,OAAO,EAAEE,OAA1H;MAAmI,YAAY,EAAEE,YAAjJ;MAA+J,eAAe,EAAEC;IAAhL;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAhDQN,Q;;KAAAA,Q;AAkDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}